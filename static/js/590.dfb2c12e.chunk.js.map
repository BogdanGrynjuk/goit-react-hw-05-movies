{"version":3,"file":"static/js/590.dfb2c12e.chunk.js","mappings":"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","sources":["components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 0 15px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n  width: 320px;\n  background-color: white;\n  border-radius: 3px;\n  border: 1px solid black;\n  overflow: hidden;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  padding: 12px 24px;\n  font-size: 16px;\n  border: none;  \n  outline: none;\n  cursor: pointer;\n  transition: background-color 500ms linear,\n              color 500ms linear;\n\n  &:hover {\n    color: white;\n    background-color: red;\n  } \n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  padding: 0 12px;\n  border: none;\n  font: inherit;\n  font-size: 16px;  \n  outline: none;  \n  \n  &::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport {\n  Container,\n  Form,\n  Input,\n  Button\n} from 'components/SearchForm/SearchForm.styled';\n\nexport const SearchForm = ({onSubmit, query}) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    if (query) {\n      setSearchQuery(query);\n    }\n    return\n  }, [query]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (searchQuery === '') {\n      alert('Please fill in the search field');\n      return;\n    }\n    onSubmit(searchQuery);\n  };\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    setSearchQuery(event.target.value.toLowerCase());\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          onChange={handleChange}\n          value={searchQuery}\n          type=\"text\"\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </Container>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  query: PropTypes.string\n}","import { NavLink } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 0 15px;\n`;\n\nexport const List = styled.ul`\n  margin: 20px 0 0 0;\n`;\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  };\n`;\n\nexport const Link = styled(NavLink)`\n  font-weight: normal;\n  font-size: 16px;\n  text-decoration: none;\n  transition: color 250ms linear;\n\n  :hover {\n    color: red;\n  }\n`;","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport api from 'services/api';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport {\n  Container,\n  List,\n  Item,\n  Link\n} from 'pages/Movies/Movies.styled'\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState(null);\n  const [movies, setMovies] = useState(null);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    async function fetchMovies(searchQuery) {\n      try {\n        const movies = await api.fetchMovies(searchQuery);\n        setMovies(movies.results);\n      } catch (error) {\n        console.log(error);\n      } \n    };\n    \n    setSearchQuery(searchParams.get('query'));\n    \n    if (searchQuery !== null) {\n      fetchMovies(searchQuery);\n    }\n\n  }, [searchQuery, searchParams]);\n\n  const onSubmit = (searchQuery) => {\n    setSearchQuery(searchQuery.toString());\n    setSearchParams(`?query=${searchQuery}`);\n  };\n\n  return (\n    <Container>\n      <SearchForm onSubmit={onSubmit} query={searchParams.get('query')} />\n      {movies\n        ? <List>\n          {movies.map(({ id, title, name }) => {\n            return (\n              <Item key={id}>\n                <Link\n                  to={`${id}`}\n                  state={{ from: location }}\n                >\n                  {title ? title : name}\n                </Link>\n              </Item>\n            )\n          })}\n        </List>\n        : null\n      }\n    </Container>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\nconst API_KEY = \"b39cd0aa2d0aa8fddb8a89d5bb3e6717\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nconst fetchMoviesInTrend = async () => {\n  try {\n    const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n    const movies = response.data;\n    return movies;\n  } catch (error) {\n    console.error(error);\n  }    \n};\n\nconst fetchMoviesDetails = async (id) => {\n  try {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n    const movie = response.data;\n    return movie;    \n  } catch (error) {\n    console.error(error);\n  }    \n};\n\nconst fetchMovieCredits = async (id) => {\n  try {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    const credits = response.data;\n    return credits;    \n  } catch (error) {\n    console.error(error);\n  }    \n};\n\nconst fetchMovieReviews = async (id) => {\n  try {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    const reviews = response.data;\n    return reviews;    \n  } catch (error) {\n    console.error(error);\n  }    \n};\n\nconst fetchMovies = async (searchQuery) => {\n  try {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`);\n    const movies = response.data;\n    return movies;    \n  } catch (error) {\n    console.error(error);\n  }    \n};\n\nconst api = {\n  fetchMoviesInTrend,\n  fetchMoviesDetails,\n  fetchMovieCredits,\n  fetchMovieReviews,\n  fetchMovies\n};\n\nexport default api;"],"names":["Container","styled","Form","Button","Input","SearchForm","onSubmit","query","useState","searchQuery","setSearchQuery","useEffect","event","preventDefault","alert","onChange","target","value","toLowerCase","type","autocomplete","autoFocus","placeholder","List","Item","Link","NavLink","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","api","results","console","log","get","fetchMovies","toString","map","id","title","name","to","state","from","API_KEY","axios","fetchMoviesInTrend","response","data","error","fetchMoviesDetails","movie","fetchMovieCredits","credits","fetchMovieReviews","reviews"],"sourceRoot":""}